{"version":3,"file":"index.0fa6283d.js","sources":["../../vite/modulepreload-polyfill","../../src/helpers/numberToOutputCurrencyString.ts","../../src/constants/servicesFinancialData.ts","../../src/store/servicesStore/helpers.ts","../../src/store/servicesStore/driveToPlaceSlice.ts","../../src/store/servicesStore/euroSlice.ts","../../src/constants/shortcutKeys.ts","../../src/store/servicesStore/settingsSlice.ts","../../src/store/servicesStore/defaultServices.ts","../../src/store/servicesStore/servicesSlice.ts","../../src/store/servicesStore/servicesStore.ts","../../node_modules/zustand/esm/middleware.mjs","../../src/store/uiStore/extendedInfoStore.ts","../../src/hooks/useKeyCombo.ts","../../src/components/ui/ModifierKeyDisplay.tsx","../../src/components/appHeader/headerNumberInput.tsx","../../src/components/appHeader/VehicleMassToggle/useVehicleMassToggle.ts","../../src/components/appHeader/VehicleMassToggle/VehicleMassToggle.tsx","../../src/components/appHeader/AppHeaderControls/useAppHeaderControls.tsx","../../src/components/appHeader/AppHeaderControls/AppHeaderControls.tsx","../../src/components/appHeader/DrawerButton.tsx","../../src/hooks/useHasServices.ts","../../src/components/appHeader/MainHeaderButtons.tsx","../../src/components/appHeader/ServicesSummary.tsx","../../src/components/appHeader/appHeader.tsx","../../src/components/pickedServiceList/serviceListItem/badges.tsx","../../src/components/ui/copyTextPopover.tsx","../../src/components/ui/copyTooltip.tsx","../../src/components/pickedServiceList/serviceListItem/copyText/CopyTextButton.tsx","../../src/components/pickedServiceList/serviceListItem/copyText/copyText.styles.ts","../../src/components/pickedServiceList/serviceListItem/replacePolishChars.ts","../../src/components/pickedServiceList/serviceListItem/copyText/useCopyText.ts","../../src/components/pickedServiceList/serviceListItem/copyText/copyText.tsx","../../src/components/pickedServiceList/serviceListItem/deleteServiceButton.tsx","../../src/components/pickedServiceList/serviceListItem/priceDisplay.tsx","../../src/components/pickedServiceList/serviceListItem/serviceListItem/DeleteServiceShortcut.tsx","../../src/hooks/useCantBeMixedWithOtherService.ts","../../src/components/pickedServiceList/serviceListItem/serviceListItem/useServiceListItem.ts","../../src/components/pickedServiceList/serviceListItem/serviceListItem/serviceListItem.tsx","../../src/components/services/documentationBonus.tsx","../../src/components/services/driveToClient.tsx","../../src/constants/rentCars.ts","../../src/components/services/rentCar.helpers.ts","../../src/components/services/rentCar.hook.ts","../../src/components/services/rentCar.tsx","../../src/components/services/repairOnSiteBonus.tsx","../../src/api/getEuroCourse.ts","../../src/helpers/outputTextFormatters/towBackText.ts","../../src/components/services/towBack.tsx","../../src/components/services/towing.helpers.ts","../../src/components/services/towing.tsx","../../src/components/pickedServiceList/pickedServiceList.tsx","../../src/components/servicePickDrawer/servicePickDrawer.tsx","../../src/components/summaryModal/SummaryModal.tsx","../../src/App.tsx","../../node_modules/react-dom/client.js","../../src/index.tsx"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","export const numberToOutputCurrencyString = (value: number): string => {\r\n  const formatter = new Intl.NumberFormat('pl-PL', {\r\n    style: 'currency',\r\n    currency: 'PLN',\r\n  })\r\n\r\n  return formatter.format(value)\r\n}\r\n","import { Fee } from '../store/servicesStore/servicesTypes'\r\n\r\nexport const towBeforeRepairHandlingFee: Fee = {\r\n  ['below 3.5t']: 600,\r\n  ['3.5t-5.5t']: 800,\r\n}\r\n\r\nexport const towBeforeRepairRate: Fee = {\r\n  ['below 3.5t']: 4.9,\r\n  ['3.5t-5.5t']: 12.5,\r\n}\r\n","import { towBeforeRepairHandlingFee, towBeforeRepairRate } from '../../constants/servicesFinancialData'\r\nimport { SingleService, VehicleWeight } from './servicesTypes'\r\n\r\nexport const driveToClientCostPerKM = 0.5\r\n\r\nexport const calculateDriveToClient = (rate: number, hours: number, oneWayDistance: number): number => {\r\n  return rate * hours + oneWayDistance * 2 * driveToClientCostPerKM\r\n}\r\n\r\nexport const calculateTowing = (distanceOneWay: number, vehicleWeight: VehicleWeight): number => {\r\n  return distanceOneWay * towBeforeRepairRate[vehicleWeight] + towBeforeRepairHandlingFee[vehicleWeight]\r\n}\r\n\r\nexport const setTextSummary = (services: SingleService[], textSummary: string, id: string): SingleService[] => {\r\n  return services.map((service) => {\r\n    if (service.id === id) {\r\n      return { ...service, textSummary }\r\n    }\r\n    return service\r\n  })\r\n}\r\n","import { StateCreator } from 'zustand'\r\n\r\nimport { calculateDriveToClient } from './helpers'\r\nimport { ServicesSlice } from './servicesTypes'\r\nimport { SettingsSlice } from './settingsSlice'\r\n\r\nexport type DriveToPlaceSlice = {\r\n  driveToPlace: {\r\n    rate: number\r\n    hours: number\r\n    setRate: (rate: number) => void\r\n    setHours: (hours: number) => void\r\n  }\r\n}\r\n\r\nexport const createDriveToPlaceSlice: StateCreator<\r\n  DriveToPlaceSlice & ServicesSlice & SettingsSlice,\r\n  [],\r\n  [],\r\n  DriveToPlaceSlice\r\n> = (set) => ({\r\n  driveToPlace: {\r\n    rate: 0,\r\n    hours: 0,\r\n    setRate: (rate) =>\r\n      set((state) => ({\r\n        ...state,\r\n        services: state.services.map((service) => {\r\n          if (service.id === '3') {\r\n            return {\r\n              ...service,\r\n              price: calculateDriveToClient(rate, state.driveToPlace.hours, state.settings.distanceBeforeRepair),\r\n            }\r\n          }\r\n          return service\r\n        }),\r\n        driveToPlace: { ...state.driveToPlace, rate },\r\n      })),\r\n    setHours: (hours) =>\r\n      set((state) => ({\r\n        ...state,\r\n        services: state.services.map((service) => {\r\n          if (service.id === '3') {\r\n            return {\r\n              ...service,\r\n              price: calculateDriveToClient(state.driveToPlace.rate, hours, state.settings.distanceBeforeRepair),\r\n            }\r\n          }\r\n          return service\r\n        }),\r\n        driveToPlace: { ...state.driveToPlace, hours },\r\n      })),\r\n  },\r\n})\r\n","import { StateCreator } from 'zustand'\r\n\r\nexport type EuroCourseSlice = {\r\n  euroCourse: {\r\n    rate: number\r\n    timestamp: number\r\n  }\r\n  setEuroCourse: (euroCourse: number, timestamp: number) => void\r\n}\r\n\r\nexport const createEuroSlice: StateCreator<EuroCourseSlice> = (set) => ({\r\n  euroCourse: {\r\n    rate: 0,\r\n    timestamp: 0,\r\n  },\r\n  setEuroCourse: (euroCourse, timestamp) =>\r\n    set((state) => ({\r\n      ...state,\r\n      euroCourse: {\r\n        rate: euroCourse,\r\n        timestamp,\r\n      },\r\n    })),\r\n})\r\n","const REMOVE_SERVICE = {\r\n  TOW_TO_BREAKDOWN: 'H',\r\n  TOW_BACK: 'J',\r\n  DRIVE_TO_CLIENT: 'K',\r\n  RENT_CAR: 'L',\r\n  DOCUMENTATION: 'B',\r\n  BONUS: 'N',\r\n} as const\r\n\r\nconst FOCUS = {\r\n  DISTANCE_TO_BREAKDOWN: 'Q',\r\n  DISTANCE_TOW_BACK: 'W',\r\n  VEHICLE_MASS: 'E',\r\n} as const\r\n\r\nexport const SHORTCUT_KEYS = {\r\n  VIEW_SERVICES: 'V',\r\n  RESET: 'R',\r\n  SHOW_DRAWER: 'D',\r\n  FOCUS,\r\n  REMOVE_SERVICE,\r\n} as const\r\n","import { StateCreator } from 'zustand'\r\n\r\nimport { DriveToPlaceSlice } from './driveToPlaceSlice'\r\nimport { calculateDriveToClient, calculateTowing } from './helpers'\r\nimport { ServicesSlice, TopLevelSettings } from './servicesTypes'\r\n\r\nexport type SettingsSlice = {\r\n  settings: TopLevelSettings\r\n  setDistanceBeforeRepair: (distance: number) => void\r\n  setDistanceAfterRepair: (distance: number) => void\r\n  setVehicleWeight: (weight: TopLevelSettings['vehicleWeight']) => void\r\n}\r\n\r\nexport const defaultSettings: TopLevelSettings = {\r\n  distanceAfterRepair: 0,\r\n  distanceBeforeRepair: 0,\r\n  vehicleWeight: 'below 3.5t',\r\n}\r\n\r\nexport const createSettingsSlice: StateCreator<\r\n  SettingsSlice & ServicesSlice & DriveToPlaceSlice,\r\n  [],\r\n  [],\r\n  SettingsSlice\r\n> = (set) => ({\r\n  settings: defaultSettings,\r\n  setVehicleWeight: (weight) =>\r\n    set((state) => ({\r\n      ...state,\r\n      settings: {\r\n        ...state.settings,\r\n        vehicleWeight: weight,\r\n      },\r\n      services: state.services.map((service) => {\r\n        if (service.id === '1') {\r\n          return {\r\n            ...service,\r\n            price: calculateTowing(state.settings.distanceBeforeRepair, weight),\r\n          }\r\n        }\r\n        return service\r\n      }),\r\n    })),\r\n  setDistanceBeforeRepair: (distance) =>\r\n    set((state) => ({\r\n      ...state,\r\n      services: state.services.map((service) => {\r\n        if (service.id === '1') {\r\n          return {\r\n            ...service,\r\n            price: calculateTowing(distance, state.settings.vehicleWeight),\r\n          }\r\n        }\r\n        if (service.id === '3') {\r\n          return {\r\n            ...service,\r\n            price: calculateDriveToClient(state.driveToPlace.rate, state.driveToPlace.hours, distance),\r\n          }\r\n        }\r\n        return service\r\n      }),\r\n      settings: {\r\n        ...state.settings,\r\n        distanceBeforeRepair: distance,\r\n      },\r\n    })),\r\n  setDistanceAfterRepair: (distance) =>\r\n    set((state) => ({\r\n      ...state,\r\n      services: state.services.map((service) => {\r\n        if (service.id === '5') {\r\n          return {\r\n            ...service,\r\n            price: distance < 50 ? 300 : distance * 1.41 * 4 + 60.03 * 4,\r\n          }\r\n        }\r\n        return service\r\n      }),\r\n      settings: {\r\n        ...state.settings,\r\n        distanceAfterRepair: distance,\r\n      },\r\n    })),\r\n})\r\n","import { towBeforeRepairHandlingFee, towBeforeRepairRate } from '../../constants/servicesFinancialData'\r\nimport { SHORTCUT_KEYS } from '../../constants/shortcutKeys'\r\nimport { SingleService } from './servicesTypes'\r\nimport { defaultSettings } from './settingsSlice'\r\n\r\nexport const defaultServices: SingleService[] = [\r\n  {\r\n    title: 'Holowanie z miejsca awarii',\r\n    id: '1',\r\n    mixGroup: 1,\r\n    price:\r\n      towBeforeRepairHandlingFee[defaultSettings.vehicleWeight] +\r\n      towBeforeRepairRate[defaultSettings.vehicleWeight] * defaultSettings.distanceBeforeRepair,\r\n    textSummary: '',\r\n    active: false,\r\n    beforeRepair: true,\r\n    deleteServiceShortcut: SHORTCUT_KEYS.REMOVE_SERVICE.TOW_TO_BREAKDOWN,\r\n  },\r\n  {\r\n    title: 'Auto zastępcze',\r\n    id: '2',\r\n    mixGroup: 2,\r\n    price: 0,\r\n    textSummary: '',\r\n    active: false,\r\n    beforeRepair: true,\r\n    deleteServiceShortcut: SHORTCUT_KEYS.REMOVE_SERVICE.RENT_CAR,\r\n  },\r\n  {\r\n    title: 'Dojazd do miejsca awarii',\r\n    id: '3',\r\n    mixGroup: 1,\r\n    price: 0,\r\n    textSummary: '',\r\n    active: false,\r\n    beforeRepair: true,\r\n    deleteServiceShortcut: SHORTCUT_KEYS.REMOVE_SERVICE.DRIVE_TO_CLIENT,\r\n  },\r\n  {\r\n    title: 'Bonus za naprawę na miejscu',\r\n    id: '4',\r\n    mixGroup: 1,\r\n    price: 100,\r\n    textSummary: 'Bonus za naprawę na miejscu 100 zł',\r\n    active: false,\r\n    deleteServiceShortcut: SHORTCUT_KEYS.REMOVE_SERVICE.BONUS,\r\n  },\r\n  {\r\n    title: 'Odwiezienie auta',\r\n    id: '5',\r\n    mixGroup: 1,\r\n    price: defaultSettings.distanceAfterRepair < 50 ? 300 : defaultSettings.distanceAfterRepair * 1.41 * 4 + 60.03 * 4,\r\n    textSummary: '',\r\n    active: false,\r\n    deleteServiceShortcut: SHORTCUT_KEYS.REMOVE_SERVICE.TOW_BACK,\r\n  },\r\n  {\r\n    title: 'Dokumentacja',\r\n    id: '6',\r\n    mixGroup: 1,\r\n    price: 100,\r\n    textSummary: 'Ryczałt 100 zł za wykonanie dokumentacji',\r\n    active: false,\r\n    deleteServiceShortcut: SHORTCUT_KEYS.REMOVE_SERVICE.DOCUMENTATION,\r\n  },\r\n]\r\n","import { StateCreator } from 'zustand'\r\n\r\nimport { defaultServices } from './defaultServices'\r\nimport { EuroCourseSlice } from './euroSlice'\r\nimport { setTextSummary } from './helpers'\r\nimport { ServicesSlice } from './servicesTypes'\r\n\r\nexport const createServicesSlice: StateCreator<ServicesSlice & EuroCourseSlice, [], [], ServicesSlice> = (set) => ({\r\n  services: defaultServices,\r\n  toggleService: (id) =>\r\n    set((state) => ({\r\n      ...state,\r\n      services: state.services.map((service) =>\r\n        service.id === id\r\n          ? {\r\n              ...service,\r\n              active: !service.active,\r\n            }\r\n          : service,\r\n      ),\r\n    })),\r\n  resetServices: () =>\r\n    set((state) => ({\r\n      ...state,\r\n      services: defaultServices,\r\n    })),\r\n  setServicePrice: (id, price) =>\r\n    set((state) => ({\r\n      ...state,\r\n      services: state.services.map((service) =>\r\n        service.id === id\r\n          ? {\r\n              ...service,\r\n              price,\r\n            }\r\n          : service,\r\n      ),\r\n    })),\r\n  setServiceTextSummary: (id, textSummary) =>\r\n    set((state) => ({\r\n      ...state,\r\n      services: setTextSummary(state.services, id, textSummary),\r\n    })),\r\n})\r\n","import create from 'zustand'\r\n\r\nimport { DriveToPlaceSlice, createDriveToPlaceSlice } from './driveToPlaceSlice'\r\nimport { EuroCourseSlice, createEuroSlice } from './euroSlice'\r\nimport { createServicesSlice } from './servicesSlice'\r\nimport { ServicesSlice } from './servicesTypes'\r\nimport { SettingsSlice, createSettingsSlice } from './settingsSlice'\r\n\r\ntype BoundStore = SettingsSlice & ServicesSlice & DriveToPlaceSlice & EuroCourseSlice\r\n\r\nexport const useServicesStore = create<BoundStore>()((...a) => ({\r\n  ...createSettingsSlice(...a),\r\n  ...createServicesSlice(...a),\r\n  ...createDriveToPlaceSlice(...a),\r\n  ...createEuroSlice(...a),\r\n}))\r\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api)\n    return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env && import.meta.env.MODE) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording)\n      return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env && import.meta.env.MODE) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools)\n              return;\n            if (typeof api.dispatch !== \"function\")\n              return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState)\n              return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0)\n    f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(name, JSON.stringify(newValue)),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","import create from 'zustand'\r\nimport { persist } from 'zustand/middleware'\r\n\r\ntype ExtendedInfoStore = {\r\n  extendedInfo: boolean\r\n  show: () => void\r\n  hide: () => void\r\n}\r\n\r\nexport const useExtendedInfoStore = create<ExtendedInfoStore>()(\r\n  persist(\r\n    (set, get) => ({\r\n      extendedInfo: true,\r\n      show: () => set({ extendedInfo: true }),\r\n      hide: () => set({ extendedInfo: false }),\r\n    }),\r\n    {\r\n      name: 'extendedInfo',\r\n    },\r\n  ),\r\n)\r\n","import { Key, useCallback, useEffect, useState } from 'react'\r\n\r\nexport const useKeyCombo = (key: Key, callback: () => void) => {\r\n  const [modifierPressed, setModifierPressed] = useState(false)\r\n\r\n  const handleKeyDown = useCallback(\r\n    (event: KeyboardEvent) => {\r\n      if (event.shiftKey) {\r\n        setModifierPressed(true)\r\n      }\r\n\r\n      if (event.key === key && modifierPressed) {\r\n        callback()\r\n      }\r\n    },\r\n    [modifierPressed, key],\r\n  )\r\n\r\n  const handleKeyUp = useCallback(\r\n    (event: KeyboardEvent) => {\r\n      if (!event.shiftKey) {\r\n        setModifierPressed(false)\r\n      }\r\n    },\r\n    [modifierPressed, key],\r\n  )\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown)\r\n    window.addEventListener('keyup', handleKeyUp)\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown)\r\n      window.removeEventListener('keyup', handleKeyUp)\r\n    }\r\n  }, [handleKeyDown, handleKeyUp])\r\n\r\n  return {\r\n    modifierPressed,\r\n  }\r\n}\r\n","import { Kbd, VStack } from '@chakra-ui/react'\r\nimport { Key, ReactNode } from 'react'\r\n\r\nimport { useKeyCombo } from '../../hooks/useKeyCombo'\r\nimport styles from './ModifierKeyDisplay.module.css'\r\n\r\ntype Props = {\r\n  children: ReactNode\r\n  keyboardKey: Key\r\n  condition?: boolean\r\n  callback: () => void\r\n  direction?: 'left'\r\n}\r\nexport const ModifierKeyDisplay = ({ children, keyboardKey, condition = true, callback, direction }: Props) => {\r\n  const keyComboHandler = () => {\r\n    if (condition) {\r\n      callback()\r\n    }\r\n  }\r\n\r\n  const { modifierPressed } = useKeyCombo(keyboardKey, keyComboHandler)\r\n\r\n  return (\r\n    <VStack className={styles.wrapper}>\r\n      {children}\r\n      {condition && modifierPressed && (\r\n        <span className={`${styles.keyWrapper} ${direction === 'left' ? styles.left : ''}`}>\r\n          <Kbd>{keyboardKey.toString().toUpperCase()}</Kbd>\r\n        </span>\r\n      )}\r\n    </VStack>\r\n  )\r\n}\r\n","import { FormControl, FormHelperText, FormLabel, Input } from '@chakra-ui/react'\r\nimport { ChangeEvent, Key, useRef } from 'react'\r\n\r\nimport { useExtendedInfoStore } from '../../store/uiStore/extendedInfoStore'\r\nimport { ModifierKeyDisplay } from '../ui/ModifierKeyDisplay'\r\n\r\ntype Props = {\r\n  inputTitle: string\r\n  inputHelperText: string\r\n  value: number\r\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void\r\n  focusShortcut: Key\r\n}\r\nexport const HeaderNumberInput = ({ inputHelperText, inputTitle, value, onChange, focusShortcut }: Props) => {\r\n  const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n  const extendedInfo = useExtendedInfoStore((state) => state.extendedInfo)\r\n\r\n  return (\r\n    <FormControl h='100%' display='flex' flexDir='column' justifyContent='space-between'>\r\n      <FormLabel>{inputTitle}</FormLabel>\r\n      <ModifierKeyDisplay\r\n        callback={() => {\r\n          inputRef.current?.focus()\r\n        }}\r\n        keyboardKey={focusShortcut}\r\n      >\r\n        <Input ref={inputRef} type='number' min='0' value={value} onChange={onChange} />\r\n      </ModifierKeyDisplay>\r\n      {extendedInfo && <FormHelperText>{inputHelperText}</FormHelperText>}\r\n    </FormControl>\r\n  )\r\n}\r\n","import { useServicesStore } from '../../../store/servicesStore/servicesStore'\r\n\r\nexport const useVehicleMassToggle = () => {\r\n  const setVehicleWeight = useServicesStore((state) => state.setVehicleWeight)\r\n\r\n  const vehicleWeightInputHandler = (weight: unknown) => {\r\n    if (weight === '3.5t-5.5t' || weight === 'below 3.5t') {\r\n      setVehicleWeight(weight)\r\n    }\r\n  }\r\n\r\n  return { vehicleWeightInputHandler }\r\n}\r\n","import { FormControl, FormHelperText, FormLabel, HStack, Radio, RadioGroup } from '@chakra-ui/react'\r\nimport { useRef } from 'react'\r\n\r\nimport { SHORTCUT_KEYS } from '../../../constants/shortcutKeys'\r\nimport { useExtendedInfoStore } from '../../../store/uiStore/extendedInfoStore'\r\nimport { ModifierKeyDisplay } from '../../ui/ModifierKeyDisplay'\r\nimport { useVehicleMassToggle } from './useVehicleMassToggle'\r\n\r\nexport const VehicleMassToggle = () => {\r\n  const { vehicleWeightInputHandler } = useVehicleMassToggle()\r\n\r\n  const radioRef = useRef<HTMLInputElement>(null)\r\n\r\n  const keyBoardPressHandler = () => {\r\n    const radioInputs = radioRef.current?.querySelectorAll('input')\r\n    if (radioInputs) [...radioInputs].find((input) => input.checked)?.focus()\r\n  }\r\n\r\n  const extendedInfo = useExtendedInfoStore((state) => state.extendedInfo)\r\n\r\n  return (\r\n    <FormControl h='100%' display='flex' flexDir='column' justifyContent='space-between'>\r\n      <FormLabel as='legend'>Masa pojazdu</FormLabel>\r\n      <ModifierKeyDisplay keyboardKey={SHORTCUT_KEYS.FOCUS.VEHICLE_MASS} callback={keyBoardPressHandler}>\r\n        <RadioGroup ref={radioRef} onChange={vehicleWeightInputHandler} defaultValue='below 3.5t'>\r\n          <HStack spacing='24px'>\r\n            <Radio value='below 3.5t'>Poniżej 3.5t</Radio>\r\n            <Radio value='3.5t-5.5t'>3.5t - 5.5t</Radio>\r\n          </HStack>\r\n        </RadioGroup>\r\n      </ModifierKeyDisplay>\r\n      {extendedInfo && <FormHelperText>Do rozliczania holowania</FormHelperText>}\r\n    </FormControl>\r\n  )\r\n}\r\n","import { ChangeEventHandler } from 'react'\r\n\r\nimport { useServicesStore } from '../../../store/servicesStore/servicesStore'\r\n\r\nexport const useAppHeaderControls = () => {\r\n  const { setDistanceAfterRepair, setDistanceBeforeRepair, settings } = useServicesStore((state) => state)\r\n\r\n  const distanceInputHandler: ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    setDistanceBeforeRepair(Number(event.target.value))\r\n  }\r\n\r\n  const distanceAfterRepairInputHandler: ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    setDistanceAfterRepair(Number(event.target.value))\r\n  }\r\n\r\n  return {\r\n    distanceInputHandler,\r\n    distanceAfterRepairInputHandler,\r\n    distanceBeforeRepair: settings.distanceBeforeRepair,\r\n    distanceAfterRepair: settings.distanceAfterRepair,\r\n  }\r\n}\r\n","import { EditIcon } from '@chakra-ui/icons'\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogContent,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogOverlay,\r\n  Button,\r\n  HStack,\r\n  IconButton,\r\n  useDisclosure,\r\n  useMediaQuery,\r\n  VStack,\r\n} from '@chakra-ui/react'\r\nimport { useRef } from 'react'\r\n\r\nimport { SHORTCUT_KEYS } from '../../../constants/shortcutKeys'\r\nimport { HeaderNumberInput } from '../headerNumberInput'\r\nimport { VehicleMassToggle } from '../VehicleMassToggle/VehicleMassToggle'\r\nimport { useAppHeaderControls } from './useAppHeaderControls'\r\n\r\nexport const AppHeaderControls = () => {\r\n  const { distanceAfterRepair, distanceAfterRepairInputHandler, distanceBeforeRepair, distanceInputHandler } =\r\n    useAppHeaderControls()\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const cancelRef = useRef(null)\r\n\r\n  const [isLargerThan800] = useMediaQuery('(min-width: 800px)')\r\n\r\n  const distanceInputs = [\r\n    {\r\n      inputHelperText: 'Odległość w jedną stronę (km)',\r\n      inputTitle: 'Odległość',\r\n      value: distanceBeforeRepair,\r\n      onChange: distanceInputHandler,\r\n      focusShortcut: SHORTCUT_KEYS.FOCUS.DISTANCE_TO_BREAKDOWN,\r\n    },\r\n    {\r\n      inputHelperText: 'Odległość w jedną stronę (km)',\r\n      inputTitle: 'Odległość odwiezienia',\r\n      value: distanceAfterRepair,\r\n      onChange: distanceAfterRepairInputHandler,\r\n      focusShortcut: SHORTCUT_KEYS.FOCUS.DISTANCE_TOW_BACK,\r\n    },\r\n  ].map((input) => <HeaderNumberInput key={input.inputTitle} {...input} />)\r\n\r\n  const Controls = (\r\n    <>\r\n      {distanceInputs} <VehicleMassToggle />\r\n    </>\r\n  )\r\n\r\n  if (!isLargerThan800) {\r\n    return (\r\n      <>\r\n        <IconButton\r\n          colorScheme='blue'\r\n          size='lg'\r\n          rounded='full'\r\n          onClick={onOpen}\r\n          aria-label='Edytuj usługi'\r\n          icon={<EditIcon fontSize='3xl' m='2' />}\r\n        />\r\n        <AlertDialog isOpen={isOpen} leastDestructiveRef={cancelRef} onClose={onClose}>\r\n          <AlertDialogOverlay>\r\n            <AlertDialogContent maxWidth='95%' alignSelf='center'>\r\n              <AlertDialogHeader fontSize='lg' fontWeight='bold'>\r\n                Edytuj usługi\r\n              </AlertDialogHeader>\r\n\r\n              <AlertDialogBody>\r\n                {' '}\r\n                <VStack gap={8} h='100%' borderColor='gray.700' align='baseline'>\r\n                  {Controls}\r\n                </VStack>\r\n              </AlertDialogBody>\r\n\r\n              <AlertDialogFooter mt='8'>\r\n                <Button ref={cancelRef} onClick={onClose}>\r\n                  Zamknij\r\n                </Button>\r\n              </AlertDialogFooter>\r\n            </AlertDialogContent>\r\n          </AlertDialogOverlay>\r\n        </AlertDialog>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <HStack h='100%' rounded='2xl' p='4' shadow='lg' border='4px' borderColor='gray.700' align='baseline'>\r\n      {Controls}\r\n    </HStack>\r\n  )\r\n}\r\n","import { HamburgerIcon } from '@chakra-ui/icons'\r\nimport { IconButton, Tooltip } from '@chakra-ui/react'\r\n\r\nimport { SHORTCUT_KEYS } from '../../constants/shortcutKeys'\r\nimport { ModifierKeyDisplay } from '../ui/ModifierKeyDisplay'\r\n\r\ntype Props = {\r\n  drawerOpenHandler: () => void\r\n}\r\n\r\nexport const DrawerButton = ({ drawerOpenHandler }: Props) => {\r\n  return (\r\n    <ModifierKeyDisplay keyboardKey={SHORTCUT_KEYS.SHOW_DRAWER} callback={drawerOpenHandler}>\r\n      <Tooltip hasArrow label='Menu z usługami'>\r\n        <IconButton aria-label='Pokaż usługi' onClick={drawerOpenHandler}>\r\n          <HamburgerIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </ModifierKeyDisplay>\r\n  )\r\n}\r\n","import { useServicesStore } from '../store/servicesStore/servicesStore'\r\n\r\nexport const useHasServices = () => {\r\n  const services = useServicesStore((state) => state.services)\r\n\r\n  const activeServices = services.filter((service) => service.active)\r\n\r\n  const servicesWithValue = activeServices.filter((service) => service.price > 0).length > 0\r\n\r\n  return {\r\n    servicesCount: activeServices.length,\r\n    hasServices: activeServices.length > 0,\r\n    hasServicesWithValue: servicesWithValue,\r\n  }\r\n}\r\n","import { DeleteIcon, ViewIcon } from '@chakra-ui/icons'\r\nimport { FormControl, FormLabel, HStack, IconButton, Switch, Tooltip, VStack } from '@chakra-ui/react'\r\nimport { ChangeEvent } from 'react'\r\n\r\nimport { SHORTCUT_KEYS } from '../../constants/shortcutKeys'\r\nimport { useHasServices } from '../../hooks/useHasServices'\r\nimport { useServicesStore } from '../../store/servicesStore/servicesStore'\r\nimport { useExtendedInfoStore } from '../../store/uiStore/extendedInfoStore'\r\nimport { ModifierKeyDisplay } from '../ui/ModifierKeyDisplay'\r\n\r\ntype Props = {\r\n  summaryOpenHandler: () => void\r\n}\r\n\r\nexport const MainHeaderButtons = ({ summaryOpenHandler }: Props) => {\r\n  const { resetServices } = useServicesStore((state) => state)\r\n\r\n  const { hasServices, hasServicesWithValue } = useHasServices()\r\n\r\n  const { extendedInfo, hide, show } = useExtendedInfoStore((state) => state)\r\n\r\n  const extendedInfoSwitchHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      show()\r\n    } else {\r\n      hide()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <VStack>\r\n      <HStack>\r\n        <ModifierKeyDisplay condition={hasServices} keyboardKey={SHORTCUT_KEYS.RESET} callback={resetServices}>\r\n          <Tooltip hasArrow label='Resetuj wszystko'>\r\n            <IconButton disabled={!hasServices} onClick={resetServices} aria-label='Resetuj wszystko'>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </ModifierKeyDisplay>\r\n        <ModifierKeyDisplay\r\n          condition={hasServicesWithValue}\r\n          keyboardKey={SHORTCUT_KEYS.VIEW_SERVICES}\r\n          callback={summaryOpenHandler}\r\n        >\r\n          <Tooltip hasArrow label='Podsumowanie usług'>\r\n            <IconButton disabled={!hasServicesWithValue} onClick={summaryOpenHandler} aria-label='Podsumowanie usług'>\r\n              <ViewIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </ModifierKeyDisplay>\r\n      </HStack>\r\n      <Tooltip hasArrow label={`Wyświetl ${extendedInfo ? 'mniej' : 'więcej'} informacji`} placement='left'>\r\n        <FormControl display='flex' alignItems='center'>\r\n          <VStack>\r\n            <FormLabel htmlFor='extended-info' mb='0'>\r\n              Informacje\r\n            </FormLabel>\r\n            <Switch isChecked={extendedInfo} onChange={extendedInfoSwitchHandler} id='extended-info' />\r\n          </VStack>\r\n        </FormControl>\r\n      </Tooltip>\r\n    </VStack>\r\n  )\r\n}\r\n","import { Box, Circle, HStack, Stack, Stat, StatHelpText, StatLabel, StatNumber, Text } from '@chakra-ui/react'\r\n\r\nimport { numberToOutputCurrencyString } from '../../helpers/numberToOutputCurrencyString'\r\nimport { SingleService } from '../../store/servicesStore/servicesTypes'\r\nimport { useExtendedInfoStore } from '../../store/uiStore/extendedInfoStore'\r\n\r\ntype Props = {\r\n  activeServices: SingleService[]\r\n  activeServiceSummary: number\r\n}\r\n\r\nexport const ServicesSummary = ({ activeServiceSummary, activeServices }: Props) => {\r\n  const numberOfActiveServices = activeServices.length\r\n\r\n  const hasActiveServices = numberOfActiveServices > 0\r\n\r\n  const formattedCombinedCost = numberToOutputCurrencyString(activeServiceSummary)\r\n\r\n  const extendedInfoActive = useExtendedInfoStore((state) => state.extendedInfo)\r\n\r\n  return (\r\n    <Box h='100%' rounded='2xl' p='4' shadow='2xl' border='4px' borderColor='green.700'>\r\n      <Stat h='100%'>\r\n        <Stack>\r\n          <StatLabel>\r\n            <HStack>\r\n              {hasActiveServices && (\r\n                <Circle size='30px' bg='green.700'>\r\n                  {numberOfActiveServices}\r\n                </Circle>\r\n              )}\r\n              <Text>Razem</Text>\r\n            </HStack>\r\n          </StatLabel>\r\n          <StatNumber>{formattedCombinedCost}</StatNumber>\r\n          {extendedInfoActive && <StatHelpText>Całkowita wartość usług</StatHelpText>}\r\n        </Stack>\r\n      </Stat>\r\n    </Box>\r\n  )\r\n}\r\n","import { Box, Center, Flex, Text, useMediaQuery, VStack } from '@chakra-ui/react'\r\n\r\nimport { numberToOutputCurrencyString } from '../../helpers/numberToOutputCurrencyString'\r\nimport { useServicesStore } from '../../store/servicesStore/servicesStore'\r\nimport { AppHeaderControls } from './AppHeaderControls/AppHeaderControls'\r\nimport { DrawerButton } from './DrawerButton'\r\nimport { MainHeaderButtons } from './MainHeaderButtons'\r\nimport { ServicesSummary } from './ServicesSummary'\r\n\r\ntype Props = {\r\n  drawerOpenHandler: () => void\r\n  summaryOpenHandler: () => void\r\n}\r\n\r\nexport const AppHeader = ({ drawerOpenHandler, summaryOpenHandler }: Props) => {\r\n  const services = useServicesStore((state) => state.services)\r\n\r\n  const activeServices = services.filter((service) => service.active)\r\n\r\n  const activeServiceSummary = activeServices.reduce((prev, curr) => prev + curr.price, 0)\r\n\r\n  const euroRate = useServicesStore((state) => state.euroCourse)\r\n\r\n  const euroRateIsSet = Boolean(euroRate.rate && euroRate.rate > 0)\r\n\r\n  const [isLargerThan800] = useMediaQuery('(min-width: 800px)')\r\n\r\n  const padding = isLargerThan800 ? '0' : '8'\r\n\r\n  return (\r\n    <Flex padding={8} w='100%' align='center' justify='space-between' gap='2'>\r\n      <DrawerButton drawerOpenHandler={drawerOpenHandler} />\r\n      <AppHeaderControls />\r\n      {euroRateIsSet && (\r\n        <Box padding='2' rounded='2xl' border='4px' borderColor='blue.800' h='100%'>\r\n          <Center h='100%'>\r\n            <VStack>\r\n              <Text fontWeight='bold'>Kurs EUR:</Text>\r\n              <Text>{numberToOutputCurrencyString(euroRate.rate)}</Text>\r\n            </VStack>\r\n          </Center>\r\n        </Box>\r\n      )}\r\n      <ServicesSummary activeServices={activeServices} activeServiceSummary={activeServiceSummary} />\r\n      <MainHeaderButtons summaryOpenHandler={summaryOpenHandler} />\r\n    </Flex>\r\n  )\r\n}\r\n","import { Badge, VStack } from '@chakra-ui/react'\r\n\r\nimport { ServiceBadge } from '../../../store/servicesStore/servicesTypes'\r\n\r\ntype Props = {\r\n  badges: ServiceBadge[]\r\n  hasIncompatibleServices?: boolean\r\n}\r\n\r\nexport const Badges = ({ badges, hasIncompatibleServices }: Props) => {\r\n  const defaultBadges = badges.map((badge) => {\r\n    return <Badge colorScheme='green'>{badge}</Badge>\r\n  })\r\n\r\n  const incompatibilityBadge = (\r\n    <Badge colorScheme='purple' variant='outline'>\r\n      Niekompatybilna\r\n    </Badge>\r\n  )\r\n\r\n  const badgesToDisplay = hasIncompatibleServices ? incompatibilityBadge : defaultBadges\r\n\r\n  return <VStack flexBasis={'10%'}>{badgesToDisplay}</VStack>\r\n}\r\n","import {\r\n  Popover,\r\n  PopoverArrow,\r\n  PopoverBody,\r\n  PopoverCloseButton,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverTrigger,\r\n  Tooltip,\r\n} from '@chakra-ui/react'\r\nimport { ReactNode } from 'react'\r\n\r\nimport classes from './copyTextPopover.module.scss'\r\n\r\ntype Props = { children: ReactNode; text: string; onCopy: () => void }\r\n\r\nexport const CopyTextPopover = ({ children, text, onCopy }: Props) => {\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger>\r\n        <button className={classes.button}>\r\n          <Tooltip hasArrow label='Pokaż całość'>\r\n            {children}\r\n          </Tooltip>\r\n        </button>\r\n      </PopoverTrigger>\r\n      <PopoverContent shadow='2xl'>\r\n        <PopoverArrow />\r\n        <PopoverCloseButton />\r\n        <PopoverHeader>Informacje o usłudze</PopoverHeader>\r\n        <PopoverBody>\r\n          <Tooltip hasArrow label='Skopiuj tekst'>\r\n            <button className={classes.button} onClick={onCopy}>\r\n              {text.split('|').map((text) => (\r\n                <p>{text}</p>\r\n              ))}\r\n            </button>\r\n          </Tooltip>\r\n        </PopoverBody>\r\n      </PopoverContent>\r\n    </Popover>\r\n  )\r\n}\r\n","import { Tooltip } from '@chakra-ui/react'\r\nimport { ReactNode } from 'react'\r\n\r\ntype Props = {\r\n  children: ReactNode\r\n  hasCopied: boolean\r\n}\r\n\r\nexport const CopyTooltip = ({ children, hasCopied }: Props) => {\r\n  const labelText = hasCopied ? 'Skopiowano' : 'Skopiuj'\r\n\r\n  const tooltipBg = hasCopied ? 'green.500' : 'gray.500'\r\n\r\n  return (\r\n    <Tooltip closeOnClick={false} bg={tooltipBg} hasArrow label={labelText}>\r\n      {children}\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { CheckIcon, CopyIcon } from '@chakra-ui/icons'\r\nimport { IconButton } from '@chakra-ui/react'\r\n\r\nimport { CopyTooltip } from '../../../ui/copyTooltip'\r\n\r\ntype Props = {\r\n  hasCopied: boolean\r\n  onCopy: () => void\r\n}\r\n\r\nexport const CopyTextButton = ({ hasCopied, onCopy }: Props) => {\r\n  const buttonIcon = hasCopied ? <CheckIcon /> : <CopyIcon />\r\n\r\n  return (\r\n    <CopyTooltip hasCopied={hasCopied}>\r\n      <IconButton onClick={onCopy} aria-label='Skopiuj do schowka'>\r\n        {buttonIcon}\r\n      </IconButton>\r\n    </CopyTooltip>\r\n  )\r\n}\r\n","export const wrapperStyles = {\r\n  justifyContent: 'space-between',\r\n  flex: '0 0 350px',\r\n  bg: 'chakra-body-bg',\r\n  rounded: 'md',\r\n  shadow: 'md',\r\n  p: '2',\r\n}\r\n\r\nexport const textToCopyStyles = {\r\n  fontSize: 'xs',\r\n  fontFamily: 'mono',\r\n  maxH: '4em',\r\n  overflow: 'auto',\r\n}\r\n\r\nexport const textErrorStyle = {\r\n  fontStyle: 'italic',\r\n}\r\n\r\nexport const wrapperErrorStyle = {\r\n  border: '2px',\r\n  borderColor: 'red.700',\r\n}\r\n","export const replacePolishChars = (text: string) => {\r\n  const polishChars: {\r\n    [key: string]: string\r\n  } = {\r\n    ą: 'a',\r\n    ć: 'c',\r\n    ę: 'e',\r\n    ł: 'l',\r\n    ń: 'n',\r\n    ó: 'o',\r\n    ś: 's',\r\n    ź: 'z',\r\n    ż: 'z',\r\n  }\r\n\r\n  return text\r\n    .toLowerCase()\r\n    .replace(/[ąćęłńóśźż]/g, (char) => polishChars[char])\r\n    .toUpperCase()\r\n}\r\n","import { useClipboard } from '@chakra-ui/react'\r\n\r\nimport { replacePolishChars } from '../replacePolishChars'\r\nimport { textErrorStyle, wrapperErrorStyle } from './copyText.styles'\r\n\r\nexport const useCopyText = (textToCopy: string = '', hasError?: boolean) => {\r\n  const formattedText = replacePolishChars(textToCopy)\r\n    .split('|')\r\n    .map((line) => line.trim())\r\n    .join('\\n')\r\n    .trim()\r\n\r\n  const { onCopy: copyFunc, hasCopied } = useClipboard(formattedText)\r\n\r\n  const errorStyle = hasError ? wrapperErrorStyle : {}\r\n\r\n  const textStyle = hasError ? textErrorStyle : {}\r\n\r\n  const onCopy = () => {\r\n    copyFunc()\r\n    navigator.clipboard.writeText(formattedText)\r\n  }\r\n\r\n  return {\r\n    onCopy,\r\n    hasCopied,\r\n    errorStyle,\r\n    textStyle,\r\n  }\r\n}\r\n","import { HStack, Text } from '@chakra-ui/react'\r\n\r\nimport { CopyTextPopover } from '../../../ui/copyTextPopover'\r\nimport { CopyTextButton } from './CopyTextButton'\r\nimport { textToCopyStyles, wrapperStyles } from './copyText.styles'\r\nimport { useCopyText } from './useCopyText'\r\n\r\ntype Props = {\r\n  textToCopy?: string\r\n  hasError?: boolean\r\n}\r\n\r\nexport const CopyText = ({ textToCopy, hasError }: Props) => {\r\n  const { errorStyle, hasCopied, textStyle, onCopy } = useCopyText(textToCopy, hasError)\r\n\r\n  if (!textToCopy) return null\r\n\r\n  return (\r\n    <HStack {...wrapperStyles} {...errorStyle}>\r\n      <CopyTextPopover onCopy={onCopy} text={textToCopy}>\r\n        <Text {...textStyle} {...textToCopyStyles}>\r\n          {textToCopy.split('|').map((text) => (\r\n            <p>{text}</p>\r\n          ))}\r\n        </Text>\r\n      </CopyTextPopover>\r\n      <CopyTextButton hasCopied={hasCopied} onCopy={onCopy} />\r\n    </HStack>\r\n  )\r\n}\r\n","import { CloseIcon } from '@chakra-ui/icons'\r\nimport { IconButton, Tooltip } from '@chakra-ui/react'\r\n\r\ntype Props = {\r\n  onDelete: () => void\r\n}\r\nexport const DeleteServiceButton = ({ onDelete }: Props) => {\r\n  return (\r\n    <Tooltip hasArrow label='Usuń usługę'>\r\n      <IconButton onClick={onDelete} aria-label='Usuń usługę'>\r\n        <CloseIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import { CheckIcon } from '@chakra-ui/icons'\r\nimport { Stat, StatLabel, StatNumber, useClipboard } from '@chakra-ui/react'\r\n\r\nimport { CopyTooltip } from '../../ui/copyTooltip'\r\n\r\ntype Props = {\r\n  price: number\r\n}\r\n\r\nexport const PriceDisplay = ({ price }: Props) => {\r\n  const priceFormatted = new Intl.NumberFormat('pl-PL', { style: 'currency', currency: 'PLN' }).format(price)\r\n\r\n  const { onCopy, hasCopied } = useClipboard(price.toFixed(2))\r\n\r\n  const buttonContent = hasCopied ? <CheckIcon /> : priceFormatted\r\n\r\n  const copyHandler = () => {\r\n    onCopy()\r\n    navigator.clipboard.writeText(price.toString())\r\n  }\r\n\r\n  return (\r\n    <Stat display={'flex'} justifyContent='center' w='fit-content' flex='0 0 120px'>\r\n      <CopyTooltip hasCopied={hasCopied}>\r\n        <button onClick={copyHandler}>\r\n          <StatLabel>Opłata</StatLabel>\r\n          <StatNumber whiteSpace='nowrap'>{buttonContent}</StatNumber>\r\n        </button>\r\n      </CopyTooltip>\r\n    </Stat>\r\n  )\r\n}\r\n","import { Key, ReactNode } from 'react'\r\n\r\nimport { ModifierKeyDisplay } from '../../../ui/ModifierKeyDisplay'\r\n\r\ntype Props = {\r\n  shortcutKey?: Key\r\n  children?: ReactNode\r\n  serviceDeleteHandler: () => void\r\n}\r\n\r\nexport const DeleteServiceShortcut = ({ children, shortcutKey, serviceDeleteHandler }: Props) => {\r\n  if (!shortcutKey) return <>{children}</>\r\n\r\n  return (\r\n    <ModifierKeyDisplay direction='left' callback={serviceDeleteHandler} keyboardKey={shortcutKey}>\r\n      {children}\r\n    </ModifierKeyDisplay>\r\n  )\r\n}\r\n","import { useServicesStore } from '../store/servicesStore/servicesStore'\r\n\r\nexport const useCantBeMixedWith = (id?: string[]) => {\r\n  if (!id) return { hasErrors: false }\r\n\r\n  const services = useServicesStore((state) => state.services)\r\n\r\n  const activeServices = services.filter((service) => service.active)\r\n\r\n  const cantBeMixedWith = activeServices.filter((service) => id.includes(service.id))\r\n\r\n  return { hasErrors: cantBeMixedWith.length > 0, conflictingServices: cantBeMixedWith }\r\n}\r\n","import { useCantBeMixedWith } from '../../../../hooks/useCantBeMixedWithOtherService'\r\nimport { useServicesStore } from '../../../../store/servicesStore/servicesStore'\r\n\r\nexport const useServiceListItem = (serviceId: string, cantBeMixedWith?: string[]) => {\r\n  const serviceStore = useServicesStore((state) => state.services.find((service) => service.id === serviceId))\r\n\r\n  const isActive = serviceStore?.active\r\n\r\n  const toggleService = useServicesStore((state) => state.toggleService)\r\n  const deleteServiceButtonHandler = () => {\r\n    toggleService(serviceId)\r\n  }\r\n  const { hasErrors, conflictingServices } = useCantBeMixedWith(cantBeMixedWith)\r\n\r\n  const bgColor = hasErrors ? 'red.900' : 'transparent'\r\n\r\n  const conflictingServicesText = `Ta usługa nie może być łączona z: ${conflictingServices\r\n    ?.map((service) => service.title)\r\n    .join(', ')}`\r\n\r\n  return {\r\n    conflictingServices,\r\n    hasErrors,\r\n    bgColor,\r\n    isActive,\r\n    deleteServiceButtonHandler,\r\n    conflictingServicesText,\r\n    shortcutKey: serviceStore?.deleteServiceShortcut,\r\n  }\r\n}\r\n","import { Flex, Text } from '@chakra-ui/react'\r\nimport { ReactNode } from 'react'\r\n\r\nimport { Service } from '../../../../store/servicesStore/servicesTypes'\r\nimport { Badges } from '../badges'\r\nimport { CopyText } from '../copyText/copyText'\r\nimport { DeleteServiceButton } from '../deleteServiceButton'\r\nimport { PriceDisplay } from '../priceDisplay'\r\nimport { DeleteServiceShortcut } from './DeleteServiceShortcut'\r\nimport { useServiceListItem } from './useServiceListItem'\r\n\r\ntype Props = {\r\n  service: Service\r\n  textToCopy?: string\r\n  children?: ReactNode\r\n  serviceId: string\r\n  hasError?: boolean\r\n  cantBeMixedWith?: string[]\r\n}\r\n\r\nconst wrapperStyles = {\r\n  gap: '4',\r\n  borderBottom: '2px',\r\n  borderColor: 'gray.600',\r\n  p: '2',\r\n  px: '4',\r\n  align: 'center',\r\n  justify: 'space-between',\r\n  w: '100%',\r\n}\r\n\r\nexport const ServiceListItem = ({ service, textToCopy, children, serviceId, hasError, cantBeMixedWith }: Props) => {\r\n  const { title, price, badges } = service\r\n\r\n  const { bgColor, conflictingServicesText, deleteServiceButtonHandler, hasErrors, isActive, shortcutKey } =\r\n    useServiceListItem(serviceId, cantBeMixedWith)\r\n\r\n  if (!isActive) return null\r\n\r\n  return (\r\n    <Flex {...wrapperStyles} bg={bgColor}>\r\n      <Text fontWeight='bold' flex='1 0 100px'>\r\n        {title}\r\n      </Text>\r\n      {children}\r\n      <Badges hasIncompatibleServices={hasErrors} badges={badges} />\r\n      <CopyText hasError={hasError || hasErrors} textToCopy={hasErrors ? conflictingServicesText : textToCopy} />\r\n      <PriceDisplay price={price} />\r\n      <DeleteServiceShortcut shortcutKey={shortcutKey} serviceDeleteHandler={deleteServiceButtonHandler}>\r\n        <DeleteServiceButton onDelete={deleteServiceButtonHandler} />\r\n      </DeleteServiceShortcut>\r\n    </Flex>\r\n  )\r\n}\r\n","import { useServicesStore } from '../../store/servicesStore/servicesStore'\r\nimport { Service } from '../../store/servicesStore/servicesTypes'\r\nimport { ServiceListItem } from '../pickedServiceList/serviceListItem/serviceListItem/serviceListItem'\r\n\r\nexport const DocumentationBonus = () => {\r\n  const towingServiceStore = useServicesStore((state) => state.services.find((service) => service.id === '6'))\r\n\r\n  const isActive = towingServiceStore?.active\r\n\r\n  if (!isActive) return null\r\n\r\n  const serviceData: Service = {\r\n    title: 'Dokumentacja',\r\n    price: 100,\r\n    badges: ['ryczałt', 'po naprawie'],\r\n    active: true,\r\n    serviceType: 'after repair',\r\n    serviceSummaryText: 'Dokumentacja',\r\n    preventCombineGroup: null,\r\n  }\r\n\r\n  return (\r\n    <ServiceListItem serviceId='6' service={serviceData} textToCopy='Ryczałt 100 zł za sporządzenie dokumentacji' />\r\n  )\r\n}\r\n","import { FormControl, FormLabel, HStack, Input } from '@chakra-ui/react'\r\nimport { ChangeEventHandler } from 'react'\r\n\r\nimport { numberToOutputCurrencyString } from '../../helpers/numberToOutputCurrencyString'\r\nimport { driveToClientCostPerKM } from '../../store/servicesStore/helpers'\r\nimport { useServicesStore } from '../../store/servicesStore/servicesStore'\r\nimport { ServiceListItem } from '../pickedServiceList/serviceListItem/serviceListItem/serviceListItem'\r\n\r\nexport const DriveToClient = () => {\r\n  const driveToClientServiceStore = useServicesStore((state) => state.services.find((service) => service.id === '3'))\r\n\r\n  const { hours, rate, setHours, setRate } = useServicesStore((state) => state.driveToPlace)\r\n\r\n  const distance = useServicesStore((state) => state.settings.distanceBeforeRepair)\r\n\r\n  const hoursInputHandler: ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    setHours(+event.target.value)\r\n  }\r\n\r\n  const rateInputHandler: ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    setRate(+event.target.value)\r\n  }\r\n\r\n  const isActive = driveToClientServiceStore?.active\r\n\r\n  if (!isActive) return null\r\n\r\n  const isInvalid = !hours || !rate || !distance || hours < 0 || rate < 0 || distance < 0 || hours === 0\r\n\r\n  const textToCopy = `\r\n      Dojazd i powrot z miejsca awarii:\r\n      CZAS PRACY MECHANIKA ${hours} h X STAWKA ${numberToOutputCurrencyString(rate)}/h + ${\r\n    distance * 2\r\n  } KM X ${numberToOutputCurrencyString(driveToClientCostPerKM)} = ${numberToOutputCurrencyString(\r\n    driveToClientServiceStore.price,\r\n  )}\r\n`.toUpperCase()\r\n\r\n  const displayText = isInvalid ? 'Podaj: odległość, stawkę oraz roboczogodziny żeby obliczyć wartość' : textToCopy\r\n\r\n  return (\r\n    <ServiceListItem\r\n      cantBeMixedWith={['2', '1', '5']}\r\n      hasError={isInvalid}\r\n      serviceId='3'\r\n      service={{\r\n        active: true,\r\n        badges: ['przed naprawą'],\r\n        price: driveToClientServiceStore.price,\r\n        title: 'Dojazd do miejsca awarii',\r\n        preventCombineGroup: null,\r\n        serviceType: 'before repair',\r\n      }}\r\n      textToCopy={displayText}\r\n    >\r\n      <HStack>\r\n        <FormControl>\r\n          <FormLabel>Roboczogodziny</FormLabel>\r\n          <Input onChange={hoursInputHandler} value={hours} min='0' placeholder='RBH' type='number' />\r\n        </FormControl>\r\n        <FormControl>\r\n          <FormLabel>Stawka</FormLabel>\r\n          <Input onChange={rateInputHandler} value={rate} min='0' placeholder='stawka' type='number' />\r\n        </FormControl>\r\n      </HStack>\r\n    </ServiceListItem>\r\n  )\r\n}\r\n","type Car = {\r\n  name: string\r\n  price: number\r\n  id: string\r\n}\r\n\r\nexport const rentCars: Car[] = [\r\n  {\r\n    name: 'Audi A4',\r\n    price: 100,\r\n    id: '1',\r\n  },\r\n  {\r\n    name: 'Audi A6',\r\n    price: 200,\r\n    id: '2',\r\n  },\r\n  {\r\n    name: 'Audi A8',\r\n    price: 300,\r\n    id: '3',\r\n  },\r\n]\r\n","import { numberToOutputCurrencyString } from '../../helpers/numberToOutputCurrencyString'\r\n\r\nexport const rentCarCopyText = (rate: number, days: number, carModel: string): string => {\r\n  const car = `Auto zastępcze: ${carModel}`\r\n  const cost = `Wynajem na ${days} dni, stawka ${numberToOutputCurrencyString(rate)} za dzień`\r\n  const total = `Razem: ${numberToOutputCurrencyString(rate * days)}`\r\n\r\n  return [car, cost, total].join(' | ')\r\n}\r\n","import { ChangeEventHandler, useState } from 'react'\r\n\r\nimport { rentCars } from '../../constants/rentCars'\r\nimport { useServicesStore } from '../../store/servicesStore/servicesStore'\r\nimport { SingleService } from '../../store/servicesStore/servicesTypes'\r\nimport { rentCarCopyText } from './rentCar.helpers'\r\n\r\nexport const useRentCar = () => {\r\n  const [days, setDays] = useState(0)\r\n  const [carPrice, setCarPrice] = useState(0)\r\n  const [carName, setCarName] = useState('')\r\n\r\n  const rentCarServiceStore = useServicesStore((state) =>\r\n    state.services.find((service) => service.id === '2'),\r\n  ) as SingleService\r\n\r\n  const setPrice = useServicesStore((state) => state.setServicePrice)\r\n\r\n  const daysInputHandler: ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    const days = event.target.valueAsNumber\r\n    setDays(days)\r\n\r\n    if (isFinite(days) && isFinite(carPrice)) {\r\n      setPrice('2', days * carPrice)\r\n    }\r\n  }\r\n\r\n  const carSelectHandler: ChangeEventHandler<HTMLSelectElement> = (event) => {\r\n    const carPrice = rentCars.find((car) => car.name === event.target.value)?.price\r\n\r\n    setCarName(event.target.value)\r\n\r\n    if (carPrice) {\r\n      setCarPrice(carPrice)\r\n    }\r\n\r\n    if (isFinite(days) && carPrice && isFinite(carPrice)) {\r\n      setPrice('2', days * carPrice)\r\n    } else {\r\n      setPrice('2', 0)\r\n    }\r\n  }\r\n\r\n  const shouldDisplayText = days > 0 && carName !== '' && carPrice > 0\r\n\r\n  const textToCopy = shouldDisplayText ? rentCarCopyText(carPrice, days, carName) : 'Nie wybrano modelu auta lub dni'\r\n\r\n  return {\r\n    days,\r\n    daysInputHandler,\r\n    carSelectHandler,\r\n    shouldDisplayText,\r\n    priceFromStore: rentCarServiceStore.price,\r\n    textToCopy,\r\n  }\r\n}\r\n","import { FormControl, FormLabel, Input, Select } from '@chakra-ui/react'\r\n\r\nimport { rentCars } from '../../constants/rentCars'\r\nimport { numberToOutputCurrencyString } from '../../helpers/numberToOutputCurrencyString'\r\nimport { ServiceListItem } from '../pickedServiceList/serviceListItem/serviceListItem/serviceListItem'\r\nimport { useRentCar } from './rentCar.hook'\r\n\r\nconst CarOption = ({ name, price, model }: { name: string; price: number; model: string }) => {\r\n  return (\r\n    <option style={{ fontSize: '12px', textAlign: 'center' }} key={name} value={model}>\r\n      {`${name} - ${numberToOutputCurrencyString(price)} / doba`}\r\n    </option>\r\n  )\r\n}\r\n\r\nexport const RentCar = () => {\r\n  const { days, carSelectHandler, daysInputHandler, shouldDisplayText, priceFromStore, textToCopy } = useRentCar()\r\n\r\n  return (\r\n    <ServiceListItem\r\n      hasError={!shouldDisplayText}\r\n      serviceId='2'\r\n      service={{\r\n        active: true,\r\n        badges: ['przed naprawą'],\r\n        price: priceFromStore,\r\n        title: 'Auto zastępcze',\r\n        preventCombineGroup: null,\r\n        serviceType: 'before repair',\r\n      }}\r\n      textToCopy={textToCopy}\r\n    >\r\n      <FormControl flex='0 0 200px'>\r\n        <FormLabel>Model</FormLabel>\r\n        <Select flex={'0 0 200px'} onChange={carSelectHandler} placeholder='Wybierz model'>\r\n          {rentCars.map((car) => (\r\n            <CarOption key={car.name} name={car.name} price={car.price} model={car.name} />\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl flex='0 0 200px'>\r\n        <FormLabel>Dni</FormLabel>\r\n        <Input step={0} onChange={daysInputHandler} value={days} min='0' placeholder='days' type='number' />\r\n      </FormControl>\r\n    </ServiceListItem>\r\n  )\r\n}\r\n","import { useServicesStore } from '../../store/servicesStore/servicesStore'\r\nimport { ServiceListItem } from '../pickedServiceList/serviceListItem/serviceListItem/serviceListItem'\r\n\r\nexport const RepairOnSiteBonus = () => {\r\n  const towingServiceStore = useServicesStore((state) => state.services.find((service) => service.id === '4'))\r\n\r\n  const isActive = towingServiceStore?.active\r\n\r\n  if (!isActive) return null\r\n\r\n  return (\r\n    <ServiceListItem\r\n      cantBeMixedWith={['5', '1', '2']}\r\n      serviceId='4'\r\n      service={{\r\n        active: true,\r\n        badges: ['po naprawie', 'ryczałt'],\r\n        price: 100,\r\n        title: 'Bonus za naprawę na miejscu',\r\n        preventCombineGroup: null,\r\n        serviceType: 'after repair',\r\n      }}\r\n      textToCopy='Bonus 100 zł za naprawę na miejscu'\r\n    />\r\n  )\r\n}\r\n","const API_URL = 'https://api.nbp.pl/api/exchangerates/rates/A/EUR/?format=json'\r\n\r\nexport const getEuroCourse = async () => {\r\n  const resp = await fetch(API_URL)\r\n\r\n  const data = await resp.json()\r\n\r\n  return { rate: data.rates[0].mid, date: data.rates[0].effectiveDate }\r\n}\r\n","import { numberToOutputCurrencyString } from '../numberToOutputCurrencyString'\r\n\r\nexport const towBackText = (euroRate: number, distance: number) => {\r\n  const initialFee = 60.03 * euroRate\r\n  const distanceFee = distance * 1.41 * euroRate\r\n\r\n  return `OPŁATA MANIPULACYJNA = 60,03 EURO NETTO  x KURS ${euroRate}\r\n   = ${numberToOutputCurrencyString(initialFee)}\r\n  OPŁATA ZA ODLEGŁOŚĆ 1,41 EUR/km NETTO X ${distance} km x KURS ${euroRate} \r\n  = ${numberToOutputCurrencyString(distanceFee)}\r\n  RAZEM = ${numberToOutputCurrencyString(initialFee + distanceFee)}\r\n  `\r\n}\r\n","import { useEffect } from 'react'\r\n\r\nimport { getEuroCourse } from '../../api/getEuroCourse'\r\nimport { towBackText } from '../../helpers/outputTextFormatters/towBackText'\r\nimport { useServicesStore } from '../../store/servicesStore/servicesStore'\r\nimport { ServiceListItem } from '../pickedServiceList/serviceListItem/serviceListItem/serviceListItem'\r\n\r\nexport const TowBack = () => {\r\n  const towingServiceStore = useServicesStore((state) => state.services.find((service) => service.id === '5'))\r\n  const distance = useServicesStore((state) => state.settings.distanceAfterRepair)\r\n\r\n  const setEuroCourse = useServicesStore((state) => state.setEuroCourse)\r\n  const euroCourse = useServicesStore((state) => state.euroCourse)\r\n\r\n  const isActive = towingServiceStore?.active\r\n\r\n  useEffect(() => {\r\n    if (!isActive || distance < 50) return\r\n\r\n    const minutesSinceLastFetch = (Date.now() - euroCourse.timestamp) / 1000 / 60\r\n\r\n    if (minutesSinceLastFetch < 60) return\r\n\r\n    const fetch = async () => {\r\n      const data = await getEuroCourse()\r\n\r\n      setEuroCourse(data.rate, Date.now())\r\n    }\r\n    fetch()\r\n  }, [euroCourse, isActive, distance])\r\n\r\n  if (!isActive) return null\r\n\r\n  if (!(distance < 50))\r\n    return (\r\n      <ServiceListItem\r\n        serviceId='5'\r\n        service={{\r\n          active: true,\r\n          badges: ['po naprawie'],\r\n          price: towingServiceStore.price,\r\n          title: 'Odwiezienie pojazdu od 50 km',\r\n          preventCombineGroup: null,\r\n          serviceType: 'after repair',\r\n        }}\r\n        textToCopy={towBackText(euroCourse.rate, distance)}\r\n      />\r\n    )\r\n\r\n  return (\r\n    <ServiceListItem\r\n      serviceId='5'\r\n      service={{\r\n        active: true,\r\n        badges: ['po naprawie', 'ryczałt'],\r\n        price: towingServiceStore.price,\r\n        title: 'Odwiezienie pojazdu do 50 km',\r\n        preventCombineGroup: null,\r\n        serviceType: 'after repair',\r\n      }}\r\n      textToCopy='Odwiezienie pojazdu klienta do 50 km 300 zł netto\r\n'\r\n    />\r\n  )\r\n}\r\n","import { towBeforeRepairHandlingFee, towBeforeRepairRate } from '../../constants/servicesFinancialData'\r\nimport { numberToOutputCurrencyString } from '../../helpers/numberToOutputCurrencyString'\r\nimport { VehicleWeight } from '../../store/servicesStore/servicesTypes'\r\n\r\nexport const towingText = (vehicleWeight: VehicleWeight, distance: number) => {\r\n  const weightText = `Masa pojazdu: ${vehicleWeight === 'below 3.5t' ? 'poniżej 3.5t' : '3.5t-5.5t'}`\r\n  const handingFee = numberToOutputCurrencyString(towBeforeRepairHandlingFee[vehicleWeight])\r\n  const handingFeeText = `Opłata manipulacyjna: ${handingFee}`\r\n  const distanceFee = numberToOutputCurrencyString(distance * towBeforeRepairRate[vehicleWeight])\r\n  const distanceFeeText = `Opłata za odległość: ${distance} km X ${numberToOutputCurrencyString(\r\n    towBeforeRepairRate[vehicleWeight],\r\n  )} = ${distanceFee}`\r\n  const sum = numberToOutputCurrencyString(\r\n    distance * towBeforeRepairRate[vehicleWeight] + towBeforeRepairHandlingFee[vehicleWeight],\r\n  )\r\n  const sumText = `Razem: ${sum}`\r\n\r\n  return [weightText, handingFeeText, distanceFeeText, sumText].join(' | ')\r\n}\r\n","import { useServicesStore } from '../../store/servicesStore/servicesStore'\r\nimport { Service } from '../../store/servicesStore/servicesTypes'\r\nimport { ServiceListItem } from '../pickedServiceList/serviceListItem/serviceListItem/serviceListItem'\r\nimport { towingText } from './towing.helpers'\r\n\r\ntype Props = {\r\n  serviceId: string\r\n}\r\n\r\nexport const Towing = ({ serviceId }: Props) => {\r\n  const { distanceBeforeRepair, vehicleWeight } = useServicesStore((state) => state.settings)\r\n\r\n  const towingServiceStore = useServicesStore((state) => state.services.find((service) => service.id === serviceId))\r\n\r\n  const isActive = towingServiceStore?.active\r\n\r\n  if (!isActive) return null\r\n\r\n  const textToCopy = towingText(vehicleWeight, distanceBeforeRepair)\r\n\r\n  const serviceData: Service = {\r\n    title: 'Holowanie',\r\n    price: towingServiceStore.price,\r\n    badges: ['przed naprawą'],\r\n    active: true,\r\n    serviceType: 'after repair',\r\n    serviceSummaryText: 'Dokumentacja',\r\n    preventCombineGroup: null,\r\n  }\r\n\r\n  return (\r\n    <ServiceListItem cantBeMixedWith={['3', '4']} serviceId={serviceId} service={serviceData} textToCopy={textToCopy} />\r\n  )\r\n}\r\n","import { AddIcon } from '@chakra-ui/icons'\r\nimport { Button, Center, HStack, ScaleFade, Stack, Text } from '@chakra-ui/react'\r\n\r\nimport { SHORTCUT_KEYS } from '../../constants/shortcutKeys'\r\nimport { useServicesStore } from '../../store/servicesStore/servicesStore'\r\nimport { DocumentationBonus } from '../services/documentationBonus'\r\nimport { DriveToClient } from '../services/driveToClient'\r\nimport { RentCar } from '../services/rentCar'\r\nimport { RepairOnSiteBonus } from '../services/repairOnSiteBonus'\r\nimport { TowBack } from '../services/towBack'\r\nimport { Towing } from '../services/towing'\r\nimport { ModifierKeyDisplay } from '../ui/ModifierKeyDisplay'\r\n\r\ntype Props = {\r\n  drawerOpenHandler: () => void\r\n}\r\n\r\nexport const PickedServiceList = ({ drawerOpenHandler }: Props) => {\r\n  const hasServicesToDisplay =\r\n    useServicesStore((state) => state.services).filter((service) => service.active).length > 0\r\n\r\n  const services = (\r\n    <>\r\n      <DocumentationBonus />\r\n      <Towing serviceId='1' />\r\n      <RentCar />\r\n      <DriveToClient />\r\n      <RepairOnSiteBonus />\r\n      <TowBack />\r\n    </>\r\n  )\r\n\r\n  const noPickedServiceMessage = (\r\n    <Center h='100%'>\r\n      <HStack>\r\n        <ScaleFade in>\r\n          <ModifierKeyDisplay callback={drawerOpenHandler} keyboardKey={SHORTCUT_KEYS.SHOW_DRAWER}>\r\n            <Button display='flex' gap='.4rem' rounded='3xl' onClick={drawerOpenHandler}>\r\n              <AddIcon />\r\n              <Text>Dodaj usługę</Text>\r\n            </Button>\r\n          </ModifierKeyDisplay>\r\n        </ScaleFade>\r\n      </HStack>\r\n    </Center>\r\n  )\r\n\r\n  return (\r\n    <Stack\r\n      border='2px'\r\n      borderColor='gray.600'\r\n      overflowY='auto'\r\n      shadow='dark-lg'\r\n      rounded='xl'\r\n      transition='opacity 0.3s ease-in-out'\r\n      flex='1'\r\n      h='100%'\r\n      bg='chakra-subtle-bg'\r\n    >\r\n      {hasServicesToDisplay ? services : noPickedServiceMessage}\r\n    </Stack>\r\n  )\r\n}\r\n","import {\r\n  Button,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerCloseButton,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  Stack,\r\n  Text,\r\n} from '@chakra-ui/react'\r\nimport { ReactNode } from 'react'\r\n\r\nimport { useServicesStore } from '../../store/servicesStore/servicesStore'\r\n\r\ntype Props = {\r\n  isOpen: boolean\r\n  drawerCloseHandler: () => void\r\n}\r\n\r\nconst CategoryWrapper = ({ children, text }: { children: ReactNode; text: string }) => {\r\n  return (\r\n    <Stack bg='gray.800' shadow={'lg'} w='100%' p='2' rounded={'md'}>\r\n      <Text>{text}</Text>\r\n      {children}\r\n    </Stack>\r\n  )\r\n}\r\ntype ServiceButtonProps = {\r\n  children: ReactNode\r\n  onClick: () => void\r\n  active: boolean\r\n}\r\n\r\nconst ServiceButton = ({ active, children, onClick }: ServiceButtonProps) => (\r\n  <Button border='4px' borderColor={active ? 'green.500' : 'transparent'} onClick={onClick} width='100%'>\r\n    {children}\r\n  </Button>\r\n)\r\n\r\nexport const ServicePickDrawer = ({ isOpen, drawerCloseHandler }: Props) => {\r\n  const services = useServicesStore((state) => state.services)\r\n  const toggleService = useServicesStore((state) => state.toggleService)\r\n\r\n  const [servicesBeforeRepair, servicesAfterRepair] = services.reduce(\r\n    (splitServices, service) => {\r\n      if (service.beforeRepair) {\r\n        splitServices[0].push(service)\r\n      } else {\r\n        splitServices[1].push(service)\r\n      }\r\n      return splitServices\r\n    },\r\n    [[], []] as [typeof services, typeof services],\r\n  )\r\n\r\n  return (\r\n    <Drawer isOpen={isOpen} placement='left' onClose={drawerCloseHandler}>\r\n      <DrawerOverlay />\r\n      <DrawerContent>\r\n        <DrawerCloseButton />\r\n        <DrawerHeader>Wybierz usługę mobilności</DrawerHeader>\r\n\r\n        <DrawerBody p='2'>\r\n          <Stack gap='4' align={'center'} h='100%'>\r\n            <CategoryWrapper text='Przed naprawą'>\r\n              {servicesBeforeRepair.map((option) => {\r\n                return (\r\n                  <ServiceButton active={option.active} onClick={() => toggleService(option.id)} key={option.id}>\r\n                    {option.title}\r\n                  </ServiceButton>\r\n                )\r\n              })}\r\n            </CategoryWrapper>\r\n            <CategoryWrapper text='Po naprawie'>\r\n              {servicesAfterRepair.map((option) => {\r\n                return (\r\n                  <ServiceButton active={option.active} onClick={() => toggleService(option.id)} key={option.id}>\r\n                    {option.title}\r\n                  </ServiceButton>\r\n                )\r\n              })}\r\n            </CategoryWrapper>\r\n          </Stack>\r\n        </DrawerBody>\r\n      </DrawerContent>\r\n    </Drawer>\r\n  )\r\n}\r\n","import {\r\n  Button,\r\n  HStack,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n} from '@chakra-ui/react'\r\n\r\nimport { numberToOutputCurrencyString } from '../../helpers/numberToOutputCurrencyString'\r\nimport { useServicesStore } from '../../store/servicesStore/servicesStore'\r\n\r\ntype Props = {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n}\r\n\r\ntype ServiceRowProps = {\r\n  service: {\r\n    title: string\r\n    price: number\r\n  }\r\n}\r\n\r\nconst ServiceRow = ({ service }: ServiceRowProps) => {\r\n  const formattedPrice = numberToOutputCurrencyString(service.price)\r\n\r\n  return (\r\n    <HStack w='100%' justifyContent='space-between' gap='8px'>\r\n      <span>{service.title}</span>\r\n      <span>{formattedPrice}</span>\r\n    </HStack>\r\n  )\r\n}\r\n\r\nexport const SummaryModal = ({ isOpen, onClose }: Props) => {\r\n  const services = useServicesStore((state) => state.services).filter((service) => service.active && service.price > 0)\r\n\r\n  return (\r\n    <Modal isCentered motionPreset='slideInBottom' size='xl' isOpen={isOpen} onClose={onClose}>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader>Podsumowanie usług</ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>\r\n          {services.map((service) => (\r\n            <ServiceRow key={service.id} service={service} />\r\n          ))}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button>Drukuj</Button>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  )\r\n}\r\n","import { Stack, useDisclosure, useMediaQuery } from '@chakra-ui/react'\r\nimport { useState } from 'react'\r\n\r\nimport { AppHeader } from './components/appHeader/appHeader'\r\nimport { PickedServiceList } from './components/pickedServiceList/pickedServiceList'\r\nimport { ServicePickDrawer } from './components/servicePickDrawer/servicePickDrawer'\r\nimport { SummaryModal } from './components/summaryModal/SummaryModal'\r\n\r\nconst App = () => {\r\n  const [drawerOpen, setDrawerOpen] = useState(false)\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n  const [isLargerThan800] = useMediaQuery('(min-width: 800px)')\r\n\r\n  return (\r\n    <Stack overflow='hidden' padding={isLargerThan800 ? '8' : '0'} gap='16px' h='100vh'>\r\n      {isLargerThan800 && <AppHeader summaryOpenHandler={onOpen} drawerOpenHandler={() => setDrawerOpen(true)} />}\r\n      <PickedServiceList drawerOpenHandler={() => setDrawerOpen(true)} />\r\n      {!isLargerThan800 && <AppHeader summaryOpenHandler={onOpen} drawerOpenHandler={() => setDrawerOpen(true)} />}\r\n      <ServicePickDrawer isOpen={drawerOpen} drawerCloseHandler={() => setDrawerOpen(false)} />\r\n      <SummaryModal isOpen={isOpen} onClose={onClose} />\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default App\r\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import App from '@/App'\r\nimport '@/assets/scss/style.scss'\r\nimport { ChakraProvider } from '@chakra-ui/react'\r\nimport { type ThemeConfig, extendTheme } from '@chakra-ui/react'\r\nimport { StrictMode } from 'react'\r\nimport { createRoot } from 'react-dom/client'\r\nimport { QueryClient, QueryClientProvider } from 'react-query'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nconst config: ThemeConfig = {\r\n  initialColorMode: 'dark',\r\n  useSystemColorMode: true,\r\n}\r\n\r\nconst theme = extendTheme({ config })\r\n\r\nconst queryClient = new QueryClient()\r\n\r\nconst container = document.getElementById('root')\r\nconst root = createRoot(container!)\r\nconst app = (\r\n  <StrictMode>\r\n    <QueryClientProvider client={queryClient}>\r\n      <ChakraProvider theme={theme}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </ChakraProvider>\r\n    </QueryClientProvider>\r\n  </StrictMode>\r\n)\r\nroot.render(app)\r\n"],"names":["relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","numberToOutputCurrencyString","value","towBeforeRepairHandlingFee","towBeforeRepairRate","driveToClientCostPerKM","calculateDriveToClient","rate","hours","oneWayDistance","calculateTowing","distanceOneWay","vehicleWeight","setTextSummary","services","textSummary","id","service","createDriveToPlaceSlice","set","state","createEuroSlice","euroCourse","timestamp","REMOVE_SERVICE","FOCUS","SHORTCUT_KEYS","defaultSettings","createSettingsSlice","weight","distance","defaultServices","createServicesSlice","price","useServicesStore","create","a","createJSONStorage","getStorage","storage","name","_a","parse","str2","str","newValue","toThenable","fn","input","result","onFulfilled","_onRejected","e","_onFulfilled","onRejected","oldImpl","config","baseOptions","get","api","options","persistedState","currentState","hasHydrated","hydrationListeners","finishHydrationListeners","args","thenableSerialize","setItem","errorInSync","thenable","serializedValue","savedSetState","replace","configResult","stateFromStorage","hydrate","cb","postRehydrationCallback","storageValue","deserializedStorageValue","migratedState","_a2","newOptions","newImpl","persistImpl","persist","useExtendedInfoStore","useKeyCombo","key","callback","modifierPressed","setModifierPressed","useState","handleKeyDown","useCallback","event","handleKeyUp","useEffect","ModifierKeyDisplay","children","keyboardKey","condition","direction","keyComboHandler","VStack","className","styles","wrapper","keyWrapper","left","Kbd","toString","toUpperCase","HeaderNumberInput","inputHelperText","inputTitle","onChange","focusShortcut","inputRef","useRef","extendedInfo","FormControl","h","display","flexDir","justifyContent","_jsx","FormLabel","current","focus","Input","ref","type","min","FormHelperText","useVehicleMassToggle","setVehicleWeight","VehicleMassToggle","vehicleWeightInputHandler","radioRef","keyBoardPressHandler","radioInputs","querySelectorAll","find","checked","as","VEHICLE_MASS","RadioGroup","defaultValue","HStack","spacing","Radio","useAppHeaderControls","setDistanceAfterRepair","setDistanceBeforeRepair","settings","distanceInputHandler","Number","target","distanceAfterRepairInputHandler","distanceBeforeRepair","distanceAfterRepair","AppHeaderControls","isOpen","onOpen","onClose","useDisclosure","cancelRef","isLargerThan800","useMediaQuery","distanceInputs","DISTANCE_TO_BREAKDOWN","DISTANCE_TOW_BACK","map","Controls","_Fragment","rounded","p","shadow","border","borderColor","align","IconButton","colorScheme","size","onClick","icon","EditIcon","fontSize","m","AlertDialog","leastDestructiveRef","AlertDialogOverlay","AlertDialogContent","maxWidth","alignSelf","AlertDialogHeader","fontWeight","_jsxs","AlertDialogBody","gap","AlertDialogFooter","mt","Button","DrawerButton","drawerOpenHandler","SHOW_DRAWER","Tooltip","hasArrow","label","HamburgerIcon","useHasServices","activeServices","servicesWithValue","MainHeaderButtons","summaryOpenHandler","resetServices","hasServices","hasServicesWithValue","hide","show","extendedInfoSwitchHandler","RESET","disabled","DeleteIcon","VIEW_SERVICES","ViewIcon","placement","alignItems","htmlFor","mb","Switch","isChecked","ServicesSummary","activeServiceSummary","numberOfActiveServices","length","hasActiveServices","formattedCombinedCost","extendedInfoActive","Box","Stat","Stack","StatLabel","Circle","bg","Text","StatNumber","StatHelpText","AppHeader","filter","active","reduce","prev","curr","euroRate","euroRateIsSet","Boolean","Flex","padding","w","justify","Center","Badges","badges","hasIncompatibleServices","defaultBadges","badge","Badge","flexBasis","variant","badgesToDisplay","CopyTextPopover","text","onCopy","Popover","PopoverTrigger","classes","button","PopoverContent","PopoverArrow","PopoverCloseButton","PopoverHeader","PopoverBody","split","CopyTooltip","hasCopied","closeOnClick","CopyTextButton","CheckIcon","CopyIcon","buttonIcon","wrapperStyles","textToCopyStyles","textErrorStyle","wrapperErrorStyle","replacePolishChars","polishChars","char","useCopyText","textToCopy","hasError","formattedText","line","copyFunc","useClipboard","CopyText","errorStyle","textStyle","DeleteServiceButton","onDelete","CloseIcon","PriceDisplay","priceFormatted","Intl","NumberFormat","style","currency","format","toFixed","flex","copyHandler","navigator","clipboard","writeText","whiteSpace","buttonContent","DeleteServiceShortcut","shortcutKey","serviceDeleteHandler","useCantBeMixedWith","cantBeMixedWith","useServiceListItem","serviceId","serviceStore","isActive","toggleService","deleteServiceButtonHandler","hasErrors","conflictingServices","bgColor","conflictingServicesText","borderBottom","px","ServiceListItem","title","DocumentationBonus","serviceType","serviceSummaryText","preventCombineGroup","DriveToClient","driveToClientServiceStore","setHours","setRate","driveToPlace","hoursInputHandler","rateInputHandler","isInvalid","displayText","placeholder","rentCars","rentCarCopyText","days","carModel","car","cost","total","useRentCar","setDays","carPrice","setCarPrice","carName","setCarName","rentCarServiceStore","setPrice","daysInputHandler","carSelectHandler","shouldDisplayText","CarOption","model","textAlign","RentCar","priceFromStore","Select","step","RepairOnSiteBonus","API_URL","getEuroCourse","data","towBackText","initialFee","distanceFee","TowBack","towingServiceStore","setEuroCourse","Date","now","towingText","weightText","handingFeeText","distanceFeeText","sumText","Towing","serviceData","PickedServiceList","hasServicesToDisplay","noPickedServiceMessage","ScaleFade","in","AddIcon","overflowY","transition","CategoryWrapper","ServiceButton","width","ServicePickDrawer","drawerCloseHandler","servicesBeforeRepair","servicesAfterRepair","splitServices","beforeRepair","push","Drawer","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerHeader","DrawerBody","option","ServiceRow","formattedPrice","SummaryModal","Modal","isCentered","motionPreset","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","ModalFooter","App","drawerOpen","setDrawerOpen","overflow","require$$0","createRoot","initialColorMode","useSystemColorMode","theme","extendTheme","queryClient","QueryClient","container","document","getElementById","root","app","StrictMode","QueryClientProvider","client","ChakraProvider","BrowserRouter","render"],"mappings":"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"}